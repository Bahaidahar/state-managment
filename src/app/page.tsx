/* eslint-disable react/no-unknown-property */
/* eslint-disable react/no-unescaped-entities */
"use client";

import React, { useState } from "react";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { Button } from "../components/ui/button";
import { Card } from "../components/ui/card";
import Image from "next/image";

const slides = [
  {
    title: "–°—Ü–µ–Ω–∞ 0: Stateless –∏ Stateful –í–∏–¥–∂–µ—Ç—ã ‚Äì –û—Å–Ω–æ–≤—ã Flutter –í–∏–¥–∂–µ—Ç–æ–≤",
    content: (
      <>
        <p>
          –í Flutter –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç–∫—Ä–∞–Ω–∞ ‚Äì —ç—Ç–æ –≤–∏–¥–∂–µ—Ç—ã. –û–Ω–∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–∞ —Ç–∏–ø–∞:
          StatelessWidget –∏ StatefulWidget.
        </p>
        <h3 className="mb-2 mt-4 text-lg font-semibold">üß± StatelessWidget</h3>
        <ul className="list-inside list-disc">
          <li>StatelessWidget ‚Äì —ç—Ç–æ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π –≤–∏–¥–∂–µ—Ç.</li>
          <li>–û–Ω –Ω–µ –∏–º–µ–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—á–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.</li>
          <li>
            –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏,
            –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∏–∫–æ–Ω–∫–∏, –∫–Ω–æ–ø–∫–∏ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π.
          </li>
        </ul>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter/material.dart';

class MyStatelessWidget extends StatelessWidget {
  final String title;

  MyStatelessWidget({required this.title});

  @override
  Widget build(BuildContext context) {
    return Text(title, style: TextStyle(fontSize: 24));
  }
}`}
          </code>
        </pre>
        <p className="mt-2">
          üìå –ü—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ build —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Text. –í–∏–¥–∂–µ—Ç –Ω–µ
          –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º–∏.
        </p>

        <h3 className="mb-2 mt-4 text-lg font-semibold">üîÑ StatefulWidget</h3>
        <ul className="list-inside list-disc">
          <li>StatefulWidget ‚Äì —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç.</li>
          <li>
            –ò–º–µ–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
          </li>
          <li>
            –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä,
            —Å—á–µ—Ç—á–∏–∫–∏, –ø–æ–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏.
          </li>
        </ul>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter/material.dart';

class MyStatefulWidget extends StatefulWidget {
  @override
  _MyStatefulWidgetState createState() => _MyStatefulWidgetState();
}

class _MyStatefulWidgetState extends State<MyStatefulWidget> {
  int counter = 0;

  void _incrementCounter() {
    setState(() {
      counter++; // üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ!
    });
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Text("–°—á–µ—Ç: $counter", style: TextStyle(fontSize: 24)),
        ElevatedButton(
          onPressed: _incrementCounter,
          child: Text("–£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫"),
        ),
      ],
    );
  }
}`}
          </code>
        </pre>
        <p className="mt-2">
          ‚öôÔ∏è setState —É–≤–µ–¥–æ–º–ª—è–µ—Ç Flutter, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –∏ –≤–∏–¥–∂–µ—Ç
          –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å—Å—è.
        </p>
      </>
    ),
  },
  {
    title: "–°—Ü–µ–Ω–∞ 1: –û—Å–Ω–æ–≤—ã –†–µ–Ω–¥–µ—Ä–∞ –≤–æ Flutter",
    content: (
      <div className="flex flex-col items-center gap-2">
        <p>
          Flutter –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∏–¥–∂–µ—Ç–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞
          —ç–∫—Ä–∞–Ω–µ. –ö–∞–∂–¥—ã–π –≤–∏–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∏–ª–∏ "–ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è" –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
          –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
        </p>
        <ul className="mt-4 list-inside list-disc">
          <li>
            –ö–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, Flutter –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∏–¥–∂–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ
            –∑–∞–≤–∏—Å—è—Ç –æ—Ç —ç—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
          </li>
          <li>
            –†–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä,
            StatefulWidget), –≥–¥–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è.
          </li>
        </ul>
        <Image src="/flutter-widgets.png" alt="hz" width={400} height={400} />
      </div>
    ),
  },
  {
    title: "–°—Ü–µ–Ω–∞ 2: setState ‚Äì –ü—Ä–æ—Å—Ç–æ–π –∏ –ë—ã—Å—Ç—Ä—ã–π –†–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥",
    content: (
      <>
        <p>
          setState ‚Äî —ç—Ç–æ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ Flutter. –û–Ω
          –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç –≤–∏–¥–∂–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª –≤—ã–∑–≤–∞–Ω.
        </p>
        <h3 className="mb-2 mt-4 text-lg font-semibold">
          üéâ –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ —Å setState
        </h3>
        <pre className="overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter/material.dart';

class CounterPage extends StatefulWidget {
  @override
  _CounterPageState createState() => _CounterPageState();
}

class _CounterPageState extends State<CounterPage> {
  int count = 0;

  void _incrementCounter() {
    setState(() {
      count++; // üîÑ –†–µ—Ä–µ–Ω–¥–µ—Ä–∏–º, –æ–±–Ω–æ–≤–ª—è—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ!
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("–°—á–µ—Ç—á–∏–∫")),
      body: Center(
        child: Text("–°—á–µ—Ç: $count", style: TextStyle(fontSize: 24)),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        child: Icon(Icons.add),
      ),
    );
  }
}`}
          </code>
        </pre>
        <p className="mt-4">
          üìà –ö–æ–≥–¥–∞ –º—ã –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É, setState –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç build –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç
          count –Ω–∞ —ç–∫—Ä–∞–Ω–µ.
        </p>
      </>
    ),
  },
  {
    title: "–°—Ü–µ–Ω–∞ 3: Provider ‚Äì –õ–µ–≥–∫–∞—è –£–ø—Ä–∞–≤–ª—è–µ–º–∞—è –°–∏—Å—Ç–µ–º–∞ –°–æ—Å—Ç–æ—è–Ω–∏–π",
    content: (
      <>
        <p>
          Provider –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–∞ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö
          –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∏–¥–∂–µ—Ç–∞—Ö.
        </p>
        <h3 className="mb-2 mt-4 text-lg font-semibold">
          üéâ –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ —Å Provider
        </h3>
        <p>–£—Å—Ç–∞–Ω–æ–≤–∏–º provider –≤ pubspec.yaml:</p>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-yaml">
            {`dependencies:
  provider: ^6.0.0`}
          </code>
        </pre>
        <p className="mt-4">–û–ø—Ä–µ–¥–µ–ª–∏–º –º–æ–¥–µ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è:</p>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter/foundation.dart';

class Counter with ChangeNotifier {
  int _count = 0;
  int get count => _count;

  void increment() {
    _count++;
    notifyListeners(); // üîÑ –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  }
}`}
          </code>
        </pre>
        <p className="mt-4">–ò—Å–ø–æ–ª—å–∑—É–µ–º Provider –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:</p>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(
    ChangeNotifierProvider(
      create: (_) => Counter(),
      child: MyApp(),
    ),
  );
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: CounterPage(),
    );
  }
}

class CounterPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("–°—á–µ—Ç—á–∏–∫ —Å Provider")),
      body: Center(
        child: Consumer<Counter>(
          builder: (context, counter, _) => Text(
            "–°—á–µ—Ç: {counter.count}",
            style: TextStyle(fontSize: 24),
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () => context.read<Counter>().increment(),
        child: Icon(Icons.add),
      ),
    );
  }
}`}
          </code>
        </pre>
        <p className="mt-4">
          ‚ö°Ô∏è Provider –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –ª–µ–≥–∫–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ä–∞–∑–¥–µ–ª—è—Ç—å –µ–≥–æ
          –º–µ–∂–¥—É –≤–∏–¥–∂–µ—Ç–∞–º–∏ –±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å!
        </p>
      </>
    ),
  },
  {
    title: "–°—Ü–µ–Ω–∞ 4: Bloc ‚Äì –°–ª–æ–∂–Ω–æ–µ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –°–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å –ü–æ—Ç–æ–∫–∞–º–∏",
    content: (
      <>
        <p>
          Bloc ‚Äî —ç—Ç–æ –±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–¥—Ö–æ–¥, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
          —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ—Ç–æ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å
          —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
        </p>
        <h3 className="mb-2 mt-4 text-lg font-semibold">
          üéâ –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ —Å Bloc
        </h3>
        <p>–£—Å—Ç–∞–Ω–æ–≤–∏–º flutter_bloc –≤ pubspec.yaml:</p>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-yaml">
            {`dependencies:
  flutter_bloc: ^8.0.0`}
          </code>
        </pre>
        <p className="mt-4">–°–æ–∑–¥–∞–¥–∏–º CounterCubit:</p>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter_bloc/flutter_bloc.dart';

class CounterCubit extends Cubit<int> {
  CounterCubit() : super(0);

  void increment() => emit(state + 1); // üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
}`}
          </code>
        </pre>
        <p className="mt-4">
          –ò—Å–ø–æ–ª—å–∑—É–µ–º BlocProvider –∏ BlocBuilder –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          —Å–æ—Å—Ç–æ—è–Ω–∏—è:
        </p>
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: BlocProvider(
        create: (_) => CounterCubit(),
        child: CounterPage(),
      ),
    );
  }
}

class CounterPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("–°—á–µ—Ç—á–∏–∫ —Å Bloc")),
      body: Center(
        child: BlocBuilder<CounterCubit, int>(
          builder: (context, count) => Text(
            "–°—á–µ—Ç: $count",
            style: TextStyle(fontSize: 24),
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () => context.read<CounterCubit>().increment(),
        child: Icon(Icons.add),
      ),
    );
  }
}`}
          </code>
        </pre>
        <p className="mt-4">
          üß† –í Bloc –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ increment –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          "–≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è" (emit), –∏ BlocBuilder –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
        </p>
      </>
    ),
  },
  {
    title: "–≠–ø–∏–ª–æ–≥: –ö–∞–∫–æ–π –ü–æ–¥—Ö–æ–¥ –í—ã–±—Ä–∞—Ç—å?",
    content: (
      <div className="space-y-4">
        <p>
          –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å —Ç—Ä–∏ –º–æ—â–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤
          Flutter!
        </p>
        <table className="min-w-full border border-gray-300 bg-white">
          <thead>
            <tr>
              <th className="border-b px-4 py-2">–ü–æ–¥—Ö–æ–¥</th>
              <th className="border-b px-4 py-2">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td className="border-b px-4 py-2">setState</td>
              <td className="border-b px-4 py-2">
                –ü—Ä–æ—Å—Ç—ã–µ, –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
              </td>
            </tr>
            <tr>
              <td className="border-b px-4 py-2">Provider</td>
              <td className="border-b px-4 py-2">
                –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è, –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
              </td>
            </tr>
            <tr>
              <td className="border-b px-4 py-2">Bloc</td>
              <td className="border-b px-4 py-2">
                –°–ª–æ–∂–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ—Ç–æ–∫–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    ),
  },
  {
    title: "–î–ó: –í—Ä–µ–º—è –¥–µ–Ω—å–≥–∏",
    content: (
      <div className="space-y-4">
        <p>–°–¥–µ–ª–∞–π—Ç–µ –¢–∞–π–µ–º—Ä –∏—Å–ø–æ–ª—å–∑—É—é setState, Provider, BLoC</p>
        –ü—Ä–∏–º–µ—Ä –Ω–∞ setState
        <pre className="mt-2 overflow-x-auto rounded-md bg-gray-100 p-4">
          <code className="language-dart">
            {`import 'dart:async';
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: TimerScreen(),
    );
  }
}

class TimerScreen extends StatefulWidget {
  @override
  _TimerScreenState createState() => _TimerScreenState();
}

class _TimerScreenState extends State<TimerScreen> {
  Timer? _timer;
  int _start = 10; // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ —Ç–∞–π–º–µ—Ä–∞
  void startTimer() {
    _timer = Timer.periodic(Duration(seconds: 1), (timer) {
      if (_start > 0) {
        setState(() {
          _start--;
        });
      } else {
        _timer?.cancel();
      }
    });
  }

  @override
  void dispose() {
    _timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('–¢–∞–π–º–µ—Ä')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              '–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: $_start —Å–µ–∫—É–Ω–¥',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: startTimer,
              child: Text('–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä'),
            ),
          ],
        ),
      ),
    );
  }
}
`}
          </code>
        </pre>
      </div>
    ),
  },
];

export default function Component() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [direction, setDirection] = useState(0);

  const nextSlide = () => {
    setDirection(1);
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setDirection(-1);
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  return (
    <div className="animate-gradient-x flex min-h-screen flex-col items-center justify-center bg-gradient-to-br from-purple-400 via-pink-500 to-red-500 p-4">
      <style jsx global>{`
        @keyframes gradient-x {
          0%,
          100% {
            background-position: 0% 50%;
          }
          50% {
            background-position: 100% 50%;
          }
        }
        .animate-gradient-x {
          background-size: 200% 200%;
          animation: gradient-x 15s ease infinite;
        }
        .slide-enter {
          opacity: 0;
          transform: translateX(${direction > 0 ? "100%" : "-100%"});
        }
        .slide-enter-active {
          opacity: 1;
          transform: translateX(0%);
          transition:
            opacity 500ms,
            transform 500ms;
        }
        .slide-exit {
          opacity: 1;
          transform: translateX(0%);
        }
        .slide-exit-active {
          opacity: 0;
          transform: translateX(${direction > 0 ? "-100%" : "100%"});
          transition:
            opacity 500ms,
            transform 500ms;
        }
      `}</style>
      <Card className="flex h-[800px] w-full max-w-5xl flex-col overflow-hidden rounded-xl bg-white/90 shadow-xl backdrop-blur-md">
        <div className="relative flex-1 overflow-hidden">
          {slides.map((slide, index) => (
            <div
              key={index}
              className={`absolute left-0 top-0 h-full w-full p-6 transition-all duration-500 ease-in-out ${
                index === currentSlide
                  ? "slide-enter-active"
                  : "slide-exit-active"
              }`}
              style={{ display: index === currentSlide ? "block" : "none" }}
            >
              <h2 className="mb-6 text-3xl font-bold text-purple-700">
                üé¨ {slide.title}
              </h2>
              <div className="h-[calc(100%-4rem)] overflow-y-auto pb-4 text-gray-800">
                {slide.content}
              </div>
            </div>
          ))}
        </div>
        <div className="flex items-center justify-between bg-purple-100 p-4">
          <Button
            onClick={prevSlide}
            variant="outline"
            className="flex items-center transition-colors duration-300 hover:bg-purple-200"
          >
            <ChevronLeft className="mr-2 h-4 w-4" /> –ü—Ä–µ–¥—ã–¥—É—â–∏–π
          </Button>
          <span className="text-sm font-semibold text-purple-700">
            {currentSlide + 1} / {slides.length}
          </span>
          <Button
            onClick={nextSlide}
            variant="outline"
            className="flex items-center transition-colors duration-300 hover:bg-purple-200"
          >
            –°–ª–µ–¥—É—é—â–∏–π <ChevronRight className="ml-2 h-4 w-4" />
          </Button>
        </div>
      </Card>
    </div>
  );
}
